New:
- Added partial Oracle drag and drop support. (Patch: Yavor Shahpasov)

Fixed:
- ManyToOne SourceNotNull is now working propertly

Preview 3.1

New:
- CONTRIB-31: "Lazy" One-to-One relation. (Thanks: Gabriel Schenker)

Fixed:
- Server Explorer drag'n drop is now supported on international versions of VS. (Patch: Daniel Rothmaler)
- Server Explorer support changed to VS Connection Service and its Connection Hierarchies, instead of the Server Explorer's UIHierarchies to
  prevent the flicker during the hierarchy traversing process.  (Patch: Daniel Rothmaler)
- Closing Contrib-25. ValidateNotSameAttribute Won't be supported ATM.
- CONTRIB-33: When adding a table (SQL Server) to the designer which has a primary key of type uniqueidentifier ActiveWriter should use "Guid" instead of "Native" as generator (Thanks: Gabriel Schenker)
- Assembly names in NHibernate configs are incorrectly stripped from the name. (Thanx: Fedde)
- Removed dependency to MySQL.Data.dll to prevent runtime version conflicts. Moved to IDbConnection for all metadata retrieval jobs. (Thanks: Joao Paulo Marques and Shane)

Preview 3

New:
- Now optionally generates NHibernate hbm.xml files.
- Namespace in generated code is now customizable (Idea: Robert van Hoornaar)
- Imports in generated code is now customizable (Idea: Robert van Hoornaar)
- Model classes can override model level base class definition. (Patch: Robert van Hoornaar)
- Model classes can override model level generics generation. (Idea: Robert van Hoornaar)
- Contrib-26: Add support for AR Nested / NH Component mappings. Allow the ability to specify a column prefix for active record. (thx: Adam Tybor)
- Optionally generates classes implementing INotifyPropertyChanged.
- Support for drag-drop from Server Explorer for MySQL databases. Requires MySQL Connector/Net (5.1). (Patch: Michael Morton)
- Support for custom types through IUserType. See http://support.castleproject.org/browse/CONTRIB-28#action_11456 for usage. (Patch: Ricardo Stuven)
- Ability to define a nested class with a different property name than the nested class (Idea: Craig Neuwirt)

Fixed:
- Contrib-23: Produces CascadeEnum instead of ManyRelationCascadeEnum
- Ability to generate virtual properties to support Lazy properly (thx: Ayende)
- Make sure that Char and AnsiChar types are treated as a System.String types, instead of System.Char types (patch: Ayende)
- HasAndbelongToMany does not take custom property names and not found behavior into account.
- Can’t add a Many To Many relationship to 2 entities when the Class and Table names are different.
- Column keys in many-to-one relations is not optional. (Patch: Robert van Hoornaar)
- Partially fixing NHibernate code generation errors. Now works with a workaround.
- Nullable types only when NotNull=false (Patch: Ricardo Stuven)

Preview 2

New:
- Built with VS SDK v4
- Generics support (ActiveRecordBase<T> & ActiveRecordValidationBase<T>) (Generics is the default in the designer)
- VB.NET seems OK (Not tested extensively).
- Auto-sensing project type (C# or VB.NET) for code generation. You don't have to set that in the model anymore.
- New ActiveWriter Class Details toolwindow. Can be used for rapidly adding class properties. (Idea: Ayende)
- AR validators are supported for each property (not for field, key, composite key, timestamp or version) through a designer.
- Ability to customize the base class. You can substitude your own base class from the editor or generate classes without a base class.
- Ability to customize the source property name for associations. This is necessary for hierarchical objects, where they point to themselves, and using the class name resulted in un-compilable code in previous build. (Reported By: Ayende)
- More domain consistency check through validations when opening / saving.
- Applying pluralizing rules to the table name from the entity name if not specified. (Idea: Ayende)
- Ability to select a property for optional DebuggerDisplay attribute.
- Ability to decorate classes with GeneratedCodeAttribute.
- No more setting Custom Tool property of an .actiw file to ActiveWriterCodeGenerator manually after creating the file. It's done automatically. (Thanks: Bogdan Pietroiu)
- Key icon decorator on class shapes if a primary or composite key property exists (pure cosmetic).
- Key icon decorator on class shapes if at least a property has validator(s) set (pure cosmetic).
- Connector shapes changed to a more-UML-like notation.
- Extended nullable support. You may choose between nullables through external Nullables library (1.1 style) or native nullables usage of 2.0 framework.
- Some added properties to support changes (not all) in Castle trunk for ActiveRecordAttribute, PropertyAttribute etc.

Less:
- Using Output window less when doing drag-drop from Server Explorer to prevent a bug.