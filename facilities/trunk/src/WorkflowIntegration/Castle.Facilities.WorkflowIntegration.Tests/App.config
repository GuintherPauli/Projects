<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="castle"
				 type="Castle.Windsor.Configuration.AppDomain.CastleSectionHandler, Castle.Windsor" />
  </configSections>
  <castle>
    <components>
      <component id="usesdependencyinjection.service"
                 type="Castle.Facilities.WorkflowIntegration.Tests.UsesDependencyInjection, Castle.Facilities.WorkflowIntegration.Tests" />

      <!-- test adding externaldataexchange interfaces to workflowruntime via config -->
      <component id="testingexternaldata.service"
                 service="Castle.Facilities.WorkflowIntegration.Tests.Services.ITestingExternalData, Castle.Facilities.WorkflowIntegration.Tests"
                 type="Castle.Facilities.WorkflowIntegration.Tests.Services.TestingExternalData, Castle.Facilities.WorkflowIntegration.Tests">
        <parameters>
          <FullNameFormat>You are "{0} {1}".</FullNameFormat>
        </parameters>
      </component>

      <!-- enables the caller to block until the workflow completes or becomes idle -->
      <!-- used here to test adding WorkflowRuntimeService classes to workflowruntime instance via config -->
      <component id="manualworkflowscheduler.service"
                 type="System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService, System.Workflow.Runtime, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
        <parameters>
          <useActiveTimers>false</useActiveTimers>
        </parameters>
      </component>
    </components>
    
    <facilities>
      <facility id="workflowfacility" 
                type="Castle.Facilities.WorkflowIntegration.WorkflowFacility, Castle.Facilities.WorkflowIntegration" />
    </facilities>
  </castle>
</configuration>
